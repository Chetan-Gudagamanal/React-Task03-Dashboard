{"ast":null,"code":"var _jsxFileName = \"/home/chetan/Desktop/B231WD/React/React-Tasks/react-task03-dashboard/src/Components/User/EditUser.js\",\n    _s = $RefreshSig$();\n\nimport \"./AddUser.css\";\nimport Card from \"@material-ui/core/Card\";\nimport { useForm } from \"react-hook-form\";\nimport { Container } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditUser({\n  useParams,\n  users\n}) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const editUser = users.filter(user => {\n    return user.id == id;\n  });\n  console.log(editUser);\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    editUserFun(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"centeredContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MyForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CustomNameInput, {\n          label: \"Name\",\n          register: register,\n          errors: errors,\n          defaultValue: editUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CustomNameInput, {\n          label: \"Avatar\",\n          register: register,\n          errors: errors,\n          defaultValue: editUser.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"update user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditUser, \"Jcuux7J2Bd7HBaW8GIeiyDG5gDI=\", true, function () {\n  return [useForm];\n});\n\n_c = EditUser;\n\nfunction CustomNameInput({\n  label,\n  register,\n  errors,\n  defaultValue\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: label,\n      defaultValue: defaultValue,\n      ...register(label, {\n        required: true,\n        minLength: 3\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), errors[label] && errors[label].type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"This input is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), errors[label] && errors[label].type === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Min Length should be 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = CustomNameInput;\n\nasync function editUserFun(data) {\n  let userData = {\n    name: data.name,\n    avatar: data.avatar,\n    createdAt: Date.now()\n  };\n  await fetch(\"https://609e2b8c33eed80017957ee5.mockapi.io/users\", {\n    method: \"POST\",\n    body: JSON.stringify(userData)\n  });\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditUser\");\n$RefreshReg$(_c2, \"CustomNameInput\");","map":{"version":3,"sources":["/home/chetan/Desktop/B231WD/React/React-Tasks/react-task03-dashboard/src/Components/User/EditUser.js"],"names":["Card","useForm","Container","EditUser","useParams","users","id","editUser","filter","user","console","log","register","formState","errors","handleSubmit","onSubmit","data","editUserFun","name","avatar","CustomNameInput","label","defaultValue","required","minLength","type","color","userData","createdAt","Date","now","fetch","method","body","JSON","stringify"],"mappings":"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","sourcesContent":["\nimport \"./AddUser.css\";\nimport Card from \"@material-ui/core/Card\";\nimport { useForm } from \"react-hook-form\";\nimport { Container } from \"@material-ui/core\";\n\nexport default function EditUser({useParams,users}){\n    const {id}=useParams()\n    const editUser= users.filter((user)=>{\n        return user.id==id;\n    })\n    console.log(editUser)\n    const {\n        register,\n        formState: { errors },\n        handleSubmit\n      } = useForm();\n    \n      const onSubmit = (data) => {editUserFun(data)}\n    \n      return (\n        <Container className=\"centeredContainer\">\n          <div className=\"MyForm\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <h1>Edit User</h1>\n              <CustomNameInput\n                label=\"Name\"\n                register={register}\n                errors={errors}\n                defaultValue={editUser.name}\n              />\n              <CustomNameInput\n                label=\"Avatar\"\n                register={register}\n                errors={errors}\n                defaultValue={editUser.avatar}\n              />\n    \n              <input type=\"submit\" value=\"update user\"/>\n            </form>\n          </div>\n        </Container>\n      );\n}\nfunction CustomNameInput({ label, register, errors,defaultValue }) {\n    return (\n      <>\n        <label>{label}</label>\n        <input\n          placeholder={label}\n          defaultValue={defaultValue}\n          {...register(label, {\n            required: true,\n            minLength: 3\n          })}\n        />\n        {errors[label] && errors[label].type === \"required\" && (\n          <p style={{ color: \"red\" }}>This input is required</p>\n        )}\n  \n        {errors[label] && errors[label].type === \"minLength\" && (\n          <p style={{ color: \"red\" }}>Min Length should be 3</p>\n        )}\n      </>\n    );\n  }\n  async function editUserFun(data){\n        \n    let userData = {\n      name: data.name,\n      avatar: data.avatar,\n      createdAt: Date.now()\n    };\n    await fetch(\"https://609e2b8c33eed80017957ee5.mockapi.io/users\", {\n      method: \"POST\",\n      body: JSON.stringify(userData)\n    });\n  \n}"]},"metadata":{},"sourceType":"module"}