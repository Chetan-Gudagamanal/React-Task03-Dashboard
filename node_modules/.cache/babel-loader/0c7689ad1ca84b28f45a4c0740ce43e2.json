{"ast":null,"code":"var _jsxFileName = \"/home/chetan/Desktop/B231WD/React/React-Tasks/react-task03-dashboard/src/Components/Charts_Page/MyPieChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { Chart } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPieChart = props => {\n  _s();\n\n  const canvasRef = useRef(null);\n\n  const draw = ctx => {\n    var myPieChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: [\"Direct\", \"Referral\", \"Social\"],\n        datasets: [{\n          data: [55, 30, 15],\n          backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],\n          hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf'],\n          hoverBorderColor: \"rgba(234, 236, 244, 1)\"\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        tooltips: {\n          backgroundColor: \"rgb(255,255,255)\",\n          bodyFontColor: \"#858796\",\n          borderColor: '#dddfeb',\n          borderWidth: 1,\n          xPadding: 15,\n          yPadding: 15,\n          displayColors: false,\n          caretPadding: 10\n        },\n        legend: {\n          display: false\n        },\n        cutoutPercentage: 80\n      }\n    });\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d'); //Our draw come here\n\n    draw(context);\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n\n_s(MyPieChart, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = MyPieChart;\nexport default MyPieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPieChart\");","map":{"version":3,"sources":["/home/chetan/Desktop/B231WD/React/React-Tasks/react-task03-dashboard/src/Components/Charts_Page/MyPieChart.js"],"names":["React","useRef","useEffect","Chart","MyPieChart","props","canvasRef","draw","ctx","myPieChart","type","data","labels","datasets","backgroundColor","hoverBackgroundColor","hoverBorderColor","options","maintainAspectRatio","tooltips","bodyFontColor","borderColor","borderWidth","xPadding","yPadding","displayColors","caretPadding","legend","display","cutoutPercentage","canvas","current","context","getContext"],"mappings":";;;AAGA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAAQC,KAAR,QAAoB,iBAApB;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAE1B,QAAMC,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMM,IAAI,GAAGC,GAAG,IAAI;AAClB,QAAIC,UAAU,GAAG,IAAIN,KAAJ,CAAUK,GAAV,EAAe;AAC9BE,MAAAA,IAAI,EAAE,UADwB;AAE9BC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CAAC;AACTF,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADG;AAETG,UAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAFR;AAGTC,UAAAA,oBAAoB,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAHb;AAITC,UAAAA,gBAAgB,EAAE;AAJT,SAAD;AAFN,OAFwB;AAW9BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,mBAAmB,EAAE,KADd;AAEPC,QAAAA,QAAQ,EAAE;AACRL,UAAAA,eAAe,EAAE,kBADT;AAERM,UAAAA,aAAa,EAAE,SAFP;AAGRC,UAAAA,WAAW,EAAE,SAHL;AAIRC,UAAAA,WAAW,EAAE,CAJL;AAKRC,UAAAA,QAAQ,EAAE,EALF;AAMRC,UAAAA,QAAQ,EAAE,EANF;AAORC,UAAAA,aAAa,EAAE,KAPP;AAQRC,UAAAA,YAAY,EAAE;AARN,SAFH;AAYPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE;AADH,SAZD;AAePC,QAAAA,gBAAgB,EAAE;AAfX;AAXqB,KAAf,CAAjB;AA6BD,GA9BD;;AAgCA3B,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAM4B,MAAM,GAAGxB,SAAS,CAACyB,OAAzB;AACA,UAAMC,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB,CAHc,CAKd;;AACA1B,IAAAA,IAAI,CAACyB,OAAD,CAAJ;AACD,GAPQ,EAON,CAACzB,IAAD,CAPM,CAAT;AASA,sBAAO;AAAQ,IAAA,GAAG,EAAED,SAAb;AAAA,OAA4BD;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA9CD;;GAAMD,U;;KAAAA,U;AAgDN,eAAeA,UAAf","sourcesContent":["\n\n\nimport React, { useRef, useEffect } from 'react'\nimport {Chart} from \"react-chartjs-2\"\n\nconst MyPieChart = props => {\n  \n  const canvasRef = useRef(null)\n  \n  const draw = ctx => {\n    var myPieChart = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: [\"Direct\", \"Referral\", \"Social\"],\n        datasets: [{\n          data: [55, 30, 15],\n          backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],\n          hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf'],\n          hoverBorderColor: \"rgba(234, 236, 244, 1)\",\n        }],\n      },\n      options: {\n        maintainAspectRatio: false,\n        tooltips: {\n          backgroundColor: \"rgb(255,255,255)\",\n          bodyFontColor: \"#858796\",\n          borderColor: '#dddfeb',\n          borderWidth: 1,\n          xPadding: 15,\n          yPadding: 15,\n          displayColors: false,\n          caretPadding: 10,\n        },\n        legend: {\n          display: false\n        },\n        cutoutPercentage: 80,\n      },\n    });\n  }\n  \n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    \n    //Our draw come here\n    draw(context)\n  }, [draw])\n  \n  return <canvas ref={canvasRef} {...props}/>\n}\n\nexport default MyPieChart"]},"metadata":{},"sourceType":"module"}