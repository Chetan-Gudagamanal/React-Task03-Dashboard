{"ast":null,"code":"var _jsxFileName = \"/home/chetan/Desktop/B231WD/React/React-Tasks/react-task03-dashboard/src/Components/myAreaChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyAreaChart = props => {\n  _s();\n\n  function number_format(number, decimals, dec_point, thousands_sep) {\n    // *     example: number_format(1234.56, 2, ',', ' ');\n    // *     return: '1 234,56'\n    number = (number + '').replace(',', '').replace(' ', '');\n\n    var n = !isFinite(+number) ? 0 : +number,\n        prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n        sep = typeof thousands_sep === 'undefined' ? ',' : thousands_sep,\n        dec = typeof dec_point === 'undefined' ? '.' : dec_point,\n        s = '',\n        toFixedFix = function (n, prec) {\n      var k = Math.pow(10, prec);\n      return '' + Math.round(n * k) / k;\n    }; // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n\n\n    s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n\n    if (s[0].length > 3) {\n      s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n    }\n\n    if ((s[1] || '').length < prec) {\n      s[1] = s[1] || '';\n      s[1] += new Array(prec - s[1].length + 1).join('0');\n    }\n\n    return s.join(dec);\n  }\n\n  const canvasRef = useRef(null);\n\n  const draw = ctx => {\n    var myLineChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        datasets: [{\n          label: \"Earnings\",\n          lineTension: 0.3,\n          backgroundColor: \"rgba(78, 115, 223, 0.05)\",\n          borderColor: \"rgba(78, 115, 223, 1)\",\n          pointRadius: 3,\n          pointBackgroundColor: \"rgba(78, 115, 223, 1)\",\n          pointBorderColor: \"rgba(78, 115, 223, 1)\",\n          pointHoverRadius: 3,\n          pointHoverBackgroundColor: \"rgba(78, 115, 223, 1)\",\n          pointHoverBorderColor: \"rgba(78, 115, 223, 1)\",\n          pointHitRadius: 10,\n          pointBorderWidth: 2,\n          // data: [0, 10000, 5000, 15000, 10000, 20000, 15000, 25000, 20000, 30000, 25000, 40000],\n          data: [40000, 40000, 40000, 40000, 40000, 10000, 15000, 25000, 20000, 30000, 25000, 40000]\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        layout: {\n          padding: {\n            left: 10,\n            right: 25,\n            top: 25,\n            bottom: 0\n          }\n        },\n        scales: {\n          xAxes: [{\n            time: {\n              unit: 'date'\n            },\n            gridLines: {\n              display: false,\n              drawBorder: false\n            },\n            ticks: {\n              maxTicksLimit: 7\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              maxTicksLimit: 5,\n              padding: 10,\n              // Include a dollar sign in the ticks\n              callback: function (value, index, values) {\n                return '$' + number_format(value);\n              }\n            },\n            gridLines: {\n              color: \"rgb(234, 236, 244)\",\n              zeroLineColor: \"rgb(234, 236, 244)\",\n              drawBorder: false,\n              borderDash: [2],\n              zeroLineBorderDash: [2]\n            }\n          }]\n        },\n        legend: {\n          display: false\n        },\n        tooltips: {\n          backgroundColor: \"rgb(255,255,255)\",\n          bodyFontColor: \"#858796\",\n          titleMarginBottom: 10,\n          titleFontColor: '#6e707e',\n          titleFontSize: 14,\n          borderColor: '#dddfeb',\n          borderWidth: 1,\n          xPadding: 15,\n          yPadding: 15,\n          displayColors: false,\n          intersect: false,\n          mode: 'index',\n          caretPadding: 10,\n          callbacks: {\n            label: function (tooltipItem, chart) {\n              var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n              return datasetLabel + ': $' + number_format(tooltipItem.yLabel);\n            }\n          }\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (ctx) {\n      ctx.clearRect();\n    }\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d'); //Our draw come here\n\n    draw(context);\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 10\n  }, this);\n};\n\n_s(MyAreaChart, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = MyAreaChart;\nexport default MyAreaChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyAreaChart\");","map":{"version":3,"sources":["/home/chetan/Desktop/B231WD/React/React-Tasks/react-task03-dashboard/src/Components/myAreaChart.js"],"names":["React","useRef","useEffect","Chart","MyAreaChart","props","number_format","number","decimals","dec_point","thousands_sep","replace","n","isFinite","prec","Math","abs","sep","dec","s","toFixedFix","k","pow","round","split","length","Array","join","canvasRef","draw","ctx","myLineChart","type","data","labels","datasets","label","lineTension","backgroundColor","borderColor","pointRadius","pointBackgroundColor","pointBorderColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHitRadius","pointBorderWidth","options","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","xAxes","time","unit","gridLines","display","drawBorder","ticks","maxTicksLimit","yAxes","callback","value","index","values","color","zeroLineColor","borderDash","zeroLineBorderDash","legend","tooltips","bodyFontColor","titleMarginBottom","titleFontColor","titleFontSize","borderWidth","xPadding","yPadding","displayColors","intersect","mode","caretPadding","callbacks","tooltipItem","chart","datasetLabel","datasetIndex","yLabel","clearRect","canvas","current","context","getContext"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\n\nimport {Chart} from 'react-chartjs-2';\n\n\nconst MyAreaChart = props => {\n\n    function number_format(number, decimals, dec_point, thousands_sep) {\n        // *     example: number_format(1234.56, 2, ',', ' ');\n        // *     return: '1 234,56'\n        number = (number + '').replace(',', '').replace(' ', '');\n        var n = !isFinite(+number) ? 0 : +number,\n          prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n          sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\n          dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\n          s = '',\n          toFixedFix = function(n, prec) {\n            var k = Math.pow(10, prec);\n            return '' + Math.round(n * k) / k;\n          };\n        // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n        if (s[0].length > 3) {\n          s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n        }\n        if ((s[1] || '').length < prec) {\n          s[1] = s[1] || '';\n          s[1] += new Array(prec - s[1].length + 1).join('0');\n        }\n        return s.join(dec);\n      }\n  \n  const canvasRef = useRef(null)\n  \n  const draw = ctx => {\n    var myLineChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n          datasets: [{\n            label: \"Earnings\",\n            lineTension: 0.3,\n            backgroundColor: \"rgba(78, 115, 223, 0.05)\",\n            borderColor: \"rgba(78, 115, 223, 1)\",\n            pointRadius: 3,\n            pointBackgroundColor: \"rgba(78, 115, 223, 1)\",\n            pointBorderColor: \"rgba(78, 115, 223, 1)\",\n            pointHoverRadius: 3,\n            pointHoverBackgroundColor: \"rgba(78, 115, 223, 1)\",\n            pointHoverBorderColor: \"rgba(78, 115, 223, 1)\",\n            pointHitRadius: 10,\n            pointBorderWidth: 2,\n            // data: [0, 10000, 5000, 15000, 10000, 20000, 15000, 25000, 20000, 30000, 25000, 40000],\n            data: [40000, 40000, 40000, 40000, 40000, 10000, 15000, 25000, 20000, 30000, 25000, 40000],\n\n          }],\n        },\n        options: {\n          maintainAspectRatio: false,\n          layout: {\n            padding: {\n              left: 10,\n              right: 25,\n              top: 25,\n              bottom: 0\n            }\n          },\n          scales: {\n            xAxes: [{\n              time: {\n                unit: 'date'\n              },\n              gridLines: {\n                display: false,\n                drawBorder: false\n              },\n              ticks: {\n                maxTicksLimit: 7\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                maxTicksLimit: 5,\n                padding: 10,\n                // Include a dollar sign in the ticks\n                callback: function(value, index, values) {\n                  return '$' + number_format(value);\n                }\n              },\n              gridLines: {\n                color: \"rgb(234, 236, 244)\",\n                zeroLineColor: \"rgb(234, 236, 244)\",\n                drawBorder: false,\n                borderDash: [2],\n                zeroLineBorderDash: [2]\n              }\n            }],\n          },\n          legend: {\n            display: false\n          },\n          tooltips: {\n            backgroundColor: \"rgb(255,255,255)\",\n            bodyFontColor: \"#858796\",\n            titleMarginBottom: 10,\n            titleFontColor: '#6e707e',\n            titleFontSize: 14,\n            borderColor: '#dddfeb',\n            borderWidth: 1,\n            xPadding: 15,\n            yPadding: 15,\n            displayColors: false,\n            intersect: false,\n            mode: 'index',\n            caretPadding: 10,\n            callbacks: {\n              label: function(tooltipItem, chart) {\n                var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n                return datasetLabel + ': $' + number_format(tooltipItem.yLabel);\n              }\n            }\n          }\n        }\n        \n      });\n  }\n  \n  useEffect(() => {\n    if(ctx){\n      ctx.clearRect()\n    }\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    \n    //Our draw come here\n    draw(context)\n  }, [draw])\n  \n  return <canvas ref={canvasRef} {...props}/>\n}\n\nexport default MyAreaChart"]},"metadata":{},"sourceType":"module"}