{"ast":null,"code":"var _jsxFileName = \"/home/chetan/Desktop/B231WD/React/React-Tasks/react-task03-dashboard/src/Components/User/EditUser.js\",\n    _s = $RefreshSig$();\n\nimport \"./AddUser.css\";\nimport Card from \"@material-ui/core/Card\";\nimport { useForm } from \"react-hook-form\";\nimport { Container } from \"@material-ui/core\";\nimport { useContext } from \"react\";\nimport { userContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditUser() {\n  _s();\n\n  const {\n    useParams,\n    users,\n    getUsers,\n    currentUser\n  } = useContext(userContext);\n  const {\n    id\n  } = useParams();\n  const editUser = users.filter(user => {\n    return user.id == id;\n  }); //to  check if user is current user\n\n  let currentUserFlag = currentUser.id == editUser[0].id;\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm();\n  const url = `https://609e2b8c33eed80017957ee5.mockapi.io/dashboard-users/${editUser[0].id}`;\n\n  const onSubmit = data => {\n    fetch(url, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ ...data\n      })\n    }).then(res => res.json()).then(res => {\n      if (res.id == editUser[0].id) {\n        alert(\"User has been updated successfully, Kindly verify in user list\");\n      }\n\n      console.log(res.id);\n      getUsers({\n        updateCurrentUser: currentUserFlag,\n        id: editUser[0].id\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"centeredContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MyForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CustomNameInput, {\n          label: \"name\",\n          register: register,\n          errors: errors,\n          defaultValue: editUser[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CustomNameInput, {\n          label: \"avatar\",\n          register: register,\n          errors: errors,\n          defaultValue: editUser[0].avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"update user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditUser, \"Xwf4NCP2iwHrrN8edO34MGEJIYw=\", true, function () {\n  return [useForm];\n});\n\n_c = EditUser;\n\nfunction CustomNameInput({\n  label,\n  register,\n  errors,\n  defaultValue\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: label,\n      defaultValue: defaultValue,\n      ...register(label, {\n        required: true,\n        minLength: 3\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), errors[label] && errors[label].type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"This input is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this), errors[label] && errors[label].type === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Min Length should be 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = CustomNameInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditUser\");\n$RefreshReg$(_c2, \"CustomNameInput\");","map":{"version":3,"sources":["/home/chetan/Desktop/B231WD/React/React-Tasks/react-task03-dashboard/src/Components/User/EditUser.js"],"names":["Card","useForm","Container","useContext","userContext","EditUser","useParams","users","getUsers","currentUser","id","editUser","filter","user","currentUserFlag","register","formState","errors","handleSubmit","url","onSubmit","data","fetch","method","headers","body","JSON","stringify","then","res","json","alert","console","log","updateCurrentUser","name","avatar","CustomNameInput","label","defaultValue","required","minLength","type","color"],"mappings":"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","sourcesContent":["\nimport \"./AddUser.css\";\nimport Card from \"@material-ui/core/Card\";\nimport { useForm } from \"react-hook-form\";\nimport { Container } from \"@material-ui/core\";\nimport { useContext } from \"react\"\nimport {userContext} from '../../App'\n\nexport default function EditUser(){\n    const {useParams,users,getUsers,currentUser} = useContext(userContext)\n    const {id}=useParams()\n    const editUser= users.filter((user)=>{\n        return user.id==id;\n    })\n    //to  check if user is current user\n    let currentUserFlag=currentUser.id==editUser[0].id;\n    const {\n        register,\n        formState: { errors },\n        handleSubmit\n      } = useForm();\n    \n      const url=`https://609e2b8c33eed80017957ee5.mockapi.io/dashboard-users/${editUser[0].id}`\n      const onSubmit = (data) => {\n        fetch(url, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ ...data })\n        })\n          .then((res) => res.json())\n          .then((res) => {\n            if(res.id==editUser[0].id){\n              alert(\"User has been updated successfully, Kindly verify in user list\")\n            }\n            console.log(res.id)\n            getUsers({updateCurrentUser:currentUserFlag,id:editUser[0].id})\n        });\n      }\n    \n      return (\n        <Container className=\"centeredContainer\">\n          <div className=\"MyForm\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <h1>Edit User</h1>\n              <CustomNameInput\n                label=\"name\"\n                register={register}\n                errors={errors}\n                defaultValue={editUser[0].name}\n              />\n              <CustomNameInput\n                label=\"avatar\"\n                register={register}\n                errors={errors}\n                defaultValue={editUser[0].avatar}\n              />\n    \n              <input type=\"submit\" value=\"update user\"/>\n            </form>\n          </div>\n        </Container>\n      );\n}\nfunction CustomNameInput({ label, register, errors,defaultValue }) {\n    return (\n      <>\n        <label>{label}</label>\n        <input\n          placeholder={label}\n          defaultValue={defaultValue}\n          {...register(label, {\n            required: true,\n            minLength: 3\n          })}\n        />\n        {errors[label] && errors[label].type === \"required\" && (\n          <p style={{ color: \"red\" }}>This input is required</p>\n        )}\n  \n        {errors[label] && errors[label].type === \"minLength\" && (\n          <p style={{ color: \"red\" }}>Min Length should be 3</p>\n        )}\n      </>\n    );\n  }\n  "]},"metadata":{},"sourceType":"module"}