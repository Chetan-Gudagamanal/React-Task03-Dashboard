{"ast":null,"code":"var _jsxFileName = \"/home/chetan/Desktop/B231WD/React/React-Tasks/react-task03-dashboard/src/Components/User/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport \"./AddUser.css\";\nimport { useForm } from \"react-hook-form\";\nimport { Container } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddUser() {\n  _s();\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MyForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CustomNameInput, {\n          label: \"FirstName\",\n          register: register,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CustomNameInput, {\n          label: \"LastName\",\n          register: register,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddUser, \"fS2WByNE2zdixcbXAQsoZ/juHrw=\", false, function () {\n  return [useForm];\n});\n\n_c = AddUser;\n\nfunction CustomNameInput({\n  label,\n  register,\n  errors\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: label,\n      ...register(label, {\n        required: true,\n        minLength: 3\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), errors[label] && errors[label].type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"This input is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), errors[label] && errors[label].type === \"minLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Min Length should be 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = CustomNameInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddUser\");\n$RefreshReg$(_c2, \"CustomNameInput\");","map":{"version":3,"sources":["/home/chetan/Desktop/B231WD/React/React-Tasks/react-task03-dashboard/src/Components/User/AddUser.js"],"names":["useForm","Container","AddUser","register","formState","errors","handleSubmit","onSubmit","data","console","log","CustomNameInput","label","required","minLength","type","color"],"mappings":";;;AAAA,OAAO,eAAP;AACA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;;AAEA,eAAe,SAASC,OAAT,GAAkB;AAAA;;AAC7B,QAAM;AACFC,IAAAA,QADE;AAEFC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAFT;AAGFC,IAAAA;AAHE,MAIAN,OAAO,EAJb;;AAME,QAAMO,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B;;AAEA,sBACE,QAAC,SAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEF,YAAY,CAACC,QAAD,CAA5B;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,eAAD;AACE,UAAA,KAAK,EAAC,WADR;AAEE,UAAA,QAAQ,EAAEJ,QAFZ;AAGE,UAAA,MAAM,EAAEE;AAHV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE,QAAC,eAAD;AACE,UAAA,KAAK,EAAC,UADR;AAEE,UAAA,QAAQ,EAAEF,QAFZ;AAGE,UAAA,MAAM,EAAEE;AAHV;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBL;;GA9BuBH,O;UAKdF,O;;;KALcE,O;;AA+BxB,SAASS,eAAT,CAAyB;AAAEC,EAAAA,KAAF;AAAST,EAAAA,QAAT;AAAmBE,EAAAA;AAAnB,CAAzB,EAAsD;AAClD,sBACE;AAAA,4BACE;AAAA,gBAAQO;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,WAAW,EAAEA,KADf;AAAA,SAEMT,QAAQ,CAACS,KAAD,EAAQ;AAClBC,QAAAA,QAAQ,EAAE,IADQ;AAElBC,QAAAA,SAAS,EAAE;AAFO,OAAR;AAFd;AAAA;AAAA;AAAA;AAAA,YAFF,EASGT,MAAM,CAACO,KAAD,CAAN,IAAiBP,MAAM,CAACO,KAAD,CAAN,CAAcG,IAAd,KAAuB,UAAxC,iBACC;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,EAaGX,MAAM,CAACO,KAAD,CAAN,IAAiBP,MAAM,CAACO,KAAD,CAAN,CAAcG,IAAd,KAAuB,WAAxC,iBACC;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA,kBADF;AAmBD;;MApBML,e","sourcesContent":["import \"./AddUser.css\";\nimport { useForm } from \"react-hook-form\";\nimport { Container } from \"@material-ui/core\";\n\nexport default function AddUser(){\n    const {\n        register,\n        formState: { errors },\n        handleSubmit\n      } = useForm();\n    \n      const onSubmit = (data) => console.log(data);\n    \n      return (\n        <Container>\n          <div className=\"MyForm\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <h1>Create Users</h1>\n              <CustomNameInput\n                label=\"FirstName\"\n                register={register}\n                errors={errors}\n              />\n              <CustomNameInput\n                label=\"LastName\"\n                register={register}\n                errors={errors}\n              />\n    \n              <input type=\"submit\" />\n            </form>\n          </div>\n        </Container>\n      );\n}\nfunction CustomNameInput({ label, register, errors }) {\n    return (\n      <>\n        <label>{label}</label>\n        <input\n          placeholder={label}\n          {...register(label, {\n            required: true,\n            minLength: 3\n          })}\n        />\n        {errors[label] && errors[label].type === \"required\" && (\n          <p style={{ color: \"red\" }}>This input is required</p>\n        )}\n  \n        {errors[label] && errors[label].type === \"minLength\" && (\n          <p style={{ color: \"red\" }}>Min Length should be 3</p>\n        )}\n      </>\n    );\n  }"]},"metadata":{},"sourceType":"module"}